CREATE OR REPLACE TYPE T_CLIENTE IS OBJECT(
	CEDULA_RUC VARCHAR2(15),
	NOMBRE VARCHAR2(40),
	APELLIDO VARCHAR2(40),
	TELEFONO VARCHAR2(40),
	DIRECCION VARCHAR2(40),
	MONTO_VENTAS NUMBER(13),
	MEMBER FUNCTION NOMBRE_COMPUESTO RETURN VARCHAR2,
	STATIC FUNCTION ASIGNAR_CLIENTE (P_CED_RUC VARCHAR2) RETURN T_CLIENTE,
	ORDER MEMBER FUNCTION ORDEN_CLI (CLI T_CLIENTE) RETURN NUMBER
);
/

CREATE OR REPLACE TYPE BODY T_CLIENTE IS
    MEMBER FUNCTION NOMBRE_COMPUESTO RETURN VARCHAR2 IS 
    BEGIN
        RETURN (SELF.APELLIDO || ' ' || SELF.NOMBRE);
    END NOMBRE_COMPUESTO;

    STATIC FUNCTION ASIGNAR_CLIENTE (P_CED_RUC VARCHAR2) RETURN T_CLIENTE IS 
        CURSOR C_CLI(P_CD VARCHAR2) IS
            SELECT
                COALESCE(P.CEDULA, P.RUC) CEDULA_RUC,
                P.NOMBRE,
                P.APELLIDO,
                P.TELEFONO,
                P.DIRECCION,
                NVL((SELECT SUM(MONTO_TOTAL) FROM B_VENTAS WHERE ID_CLIENTE = P.ID),0) MONTO_VENTAS
            FROM B_PERSONAS P
            WHERE COALESCE(P.CEDULA, P.RUC) = P_CD AND P.ES_CLIENTE = 'S';
        R_CLI C_CLI%ROWTYPE;
        V_CLI T_CLIENTE;
    BEGIN
        OPEN C_CLI(P_CED_RUC);
        FETCH C_CLI INTO R_CLI;
        
        -- Comprobamos si se obtuvieron resultados
        IF C_CLI%FOUND THEN
            V_CLI := T_CLIENTE(R_CLI.CEDULA_RUC, R_CLI.NOMBRE, R_CLI.APELLIDO, R_CLI.TELEFONO, R_CLI.DIRECCION, R_CLI.MONTO_VENTAS);
        ELSE
            DBMS_OUTPUT.PUT_LINE('No se encontraron resultados para la cédula/RUC: ' || P_CED_RUC);
            V_CLI := NULL;  -- Esto puede ser modificado según tu lógica de manejo de errores
        END IF;

        CLOSE C_CLI;
        RETURN V_CLI;
    END ASIGNAR_CLIENTE;

    ORDER MEMBER FUNCTION ORDEN_CLI (CLI T_CLIENTE) RETURN NUMBER IS
    BEGIN
        IF CLI.MONTO_VENTAS > SELF.MONTO_VENTAS THEN
            RETURN -1;
        ELSIF CLI.MONTO_VENTAS < SELF.MONTO_VENTAS THEN
            RETURN 1;
        ELSE
            RETURN 0;
        END IF;
    END ORDEN_CLI;
END;
/

/* PRUEBAS
DECLARE
    V_CLIENTE T_CLIENTE := T_CLIENTE('1234567890', 'Juan', 'Perez', '555-1234', 'Calle Falsa 123', 3000);
    V_NOMBRE_COMPUESTO VARCHAR2(100);
BEGIN
    V_NOMBRE_COMPUESTO := V_CLIENTE.NOMBRE_COMPUESTO();
    DBMS_OUTPUT.PUT_LINE('Nombre Compuesto: ' || V_NOMBRE_COMPUESTO);
END;
/

DECLARE
    V_CLIENTE T_CLIENTE;
	V_NOMBRE_COMPUESTO VARCHAR2(100);
BEGIN
    V_CLIENTE := T_CLIENTE.ASIGNAR_CLIENTE('2281987');
	DBMS_OUTPUT.PUT_LINE('Nombre Compuesto: ' || V_NOMBRE_COMPUESTO);
END;
/

DECLARE
    V_CLIENTE T_CLIENTE;
BEGIN
    V_CLIENTE := T_CLIENTE.ASIGNAR_CLIENTE('2281987');  -- Asegúrate de usar un valor existente

    IF V_CLIENTE IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('Cedula/RUC: ' || V_CLIENTE.CEDULA_RUC);
        DBMS_OUTPUT.PUT_LINE('Nombre: ' || V_CLIENTE.NOMBRE);
        DBMS_OUTPUT.PUT_LINE('Apellido: ' || V_CLIENTE.APELLIDO);
        DBMS_OUTPUT.PUT_LINE('Teléfono: ' || V_CLIENTE.TELEFONO);
        DBMS_OUTPUT.PUT_LINE('Dirección: ' || V_CLIENTE.DIRECCION);
        DBMS_OUTPUT.PUT_LINE('Monto Ventas: ' || V_CLIENTE.MONTO_VENTAS);
    ELSE
        DBMS_OUTPUT.PUT_LINE('No se encontró el cliente con la cédula/RUC proporcionada.');
    END IF;
END;
/*/

