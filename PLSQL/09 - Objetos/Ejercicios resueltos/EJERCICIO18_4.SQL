CREATE OR REPLACE TYPE T_DEUDORES IS OBJECT(
	ID_CLIENTE NUMBER(8),
	NOMBRE VARCHAR2(50),
	DEUDA_TOTAL NUMBER(14),
	DEUDA_VENCIDA NUMBER(14),
	STATIC FUNCTION OBTENER_CLIENTE (P_CED_RUC VARCHAR2) RETURN T_DEUDORES,
	MEMBER PROCEDURE OBTENER_DEUDA,
	MAP MEMBER FUNCTION ORDENAR_CTE RETURN NUMBER
);
/

CREATE OR REPLACE TYPE BODY T_DEUDORES IS 
	STATIC FUNCTION OBTENER_CLIENTE (P_CED_RUC VARCHAR2) RETURN T_DEUDORES IS
		V_DEUDORES T_DEUDORES;
		V_NOMBRE_APELLIDO VARCHAR(50);
		V_ID NUMBER(8);
	BEGIN
		SELECT P.ID, P.NOMBRE||' '||P.APELLIDO
		INTO V_ID, V_NOMBRE_APELLIDO
		FROM B_PERSONAS P
		WHERE COALESCE(P.CEDULA,P.RUC) = P_CED_RUC;
		V_DEUDORES := T_DEUDORES(V_ID,V_NOMBRE_APELLIDO,0,0);
		RETURN V_DEUDORES;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE_APPLICATION_ERROR(-20001,'No existe cte');
	END;
	
	MEMBER PROCEDURE OBTENER_DEUDA IS
	BEGIN
		SELECT NVL(SUM(PP.MONTO_CUOTA),0)
		INTO SELF.DEUDA_TOTAL
		FROM B_VENTAS V
		INNER JOIN B_PLAN_PAGO PP ON V.ID = PP.ID_VENTA
		WHERE V.ID_CLIENTE = SELF.ID_CLIENTE AND V.TIPO_VENTA= 'CR' AND PP.FECHA_PAGO IS NULL;
		
		SELECT NVL(SUM(PP.MONTO_CUOTA),0)
		INTO SELF.DEUDA_VENCIDA
		FROM B_VENTAS V
		INNER JOIN B_PLAN_PAGO PP ON V.ID = PP.ID_VENTA
		WHERE V.ID_CLIENTE = SELF.ID_CLIENTE AND V.TIPO_VENTA= 'CR' AND SYSDATE > PP.VENCIMIENTO ;
		
	END;
	
	MAP MEMBER FUNCTION ORDENAR_CTE RETURN NUMBER IS
	
	BEGIN
		RETURN SELF.ID_CLIENTE;
	END;
END T_DEUDORES;
/
--PRUEBAS
DECLARE
	V_DEU T_DEUDORES;
BEGIN
	V_DEU := T_DEUDORES.OBTENER_CLIENTE(1207876);
	V_DEU.OBTENER_DEUDA;
	DBMS_OUTPUT.PUT_LINE('ID: '||V_DEU.ID_CLIENTE||' NOMBRE: '||V_DEU.NOMBRE||' DEUDA_TOTAL: '||V_DEU.DEUDA_TOTAL||' DEUDA_VENCIDA: '||V_DEU.DEUDA_VENCIDA);
	
END;