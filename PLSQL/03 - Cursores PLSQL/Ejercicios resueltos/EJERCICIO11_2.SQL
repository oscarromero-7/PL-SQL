SET SERVEROUTPUT ON;
DECLARE
	V_ERROR_CODE NUMBER;
    V_ERROR_MESSAGE VARCHAR2(255);
	ACUM_DEBITO NUMBER (15);
	ACUM_CREDITO NUMBER(15);
BEGIN
	FOR R_CUENTAS IN (SELECT CODIGO_CTA FROM B_CUENTAS WHERE IMPUTABLE = 'S') LOOP
		--DBMS_OUTPUT.PUT_LINE('CODIGO CUENTA: '||R_CUENTAS.CODIGO_CTA);
		BEGIN
			SELECT	
				NVL(SUM(DECODE(DD.DEBE_HABER,'D',DD.IMPORTE)),0),
				NVL(SUM(DECODE(DD.DEBE_HABER,'C',DD.IMPORTE)),0)
			INTO
				ACUM_DEBITO,
				ACUM_CREDITO
			FROM B_CUENTAS C
			INNER JOIN B_DIARIO_DETALLE DD ON C.CODIGO_CTA = DD.CODIGO_CTA
			INNER JOIN B_DIARIO_CABECERA DC ON DD.ID = DC.ID
			WHERE EXTRACT(YEAR FROM DC.FECHA) = 2019 AND 
				EXTRACT(MONTH FROM DC.FECHA) = 02 AND 
				C.CODIGO_CTA = R_CUENTAS.CODIGO_CTA
			GROUP BY R_CUENTAS.CODIGO_CTA;
			
			--DBMS_OUTPUT.PUT_LINE('ACUM_DEBITO: '||ACUM_DEBITO||'ACUM_CREDITO: '||ACUM_CREDITO);
			IF SQL%FOUND THEN
				INSERT INTO B_MAYOR (ID_MAYOR, CODIGO_CTA, ANIO, MES, ACUM_DEBITO, ACUM_CREDITO) VALUES (
					(SELECT MAX(ID_MAYOR) + 1 FROM B_MAYOR),
					R_CUENTAS.CODIGO_CTA,
					2019,
					02,
					ACUM_DEBITO,
					ACUM_CREDITO
				);
				DBMS_OUTPUT.PUT_LINE('INSERCION EXITOSA.');
			END IF;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('NO SE ENCONTRÓ INFORMACIÓN PARA LA CUENTA: ' || R_CUENTAS.CODIGO_CTA);
		
		END;
	END LOOP;
EXCEPTION
	WHEN OTHERS THEN
        V_ERROR_CODE := SQLCODE;
        V_ERROR_MESSAGE := SQLERRM;
        DBMS_OUTPUT.PUT_LINE (TO_CHAR(V_ERROR_CODE)||': '|| V_ERROR_MESSAGE);
        ROLLBACK;
END;
/