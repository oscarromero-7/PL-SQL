SET SERVEROUTPUT ON;
ACCEPT I_ID_VENTA  NUMBER PROMPT 'Ingrese el ID de venta: ';
ACCEPT I_ID_ARTICULO NUMBER PROMPT 'Ingrese el ID del articulo: ';
ACCEPT I_CANTIDAD NUMBER PROMPT 'Ingrese cantidad del articulo: ';
DECLARE
V_ID_VENTA B_VENTAS.ID%TYPE := &I_ID_VENTA;
V_ID_ARTICULO B_ARTICULOS.ID%TYPE := &I_ID_ARTICULO;
V_CANTIDAD B_ARTICULOS.STOCK_ACTUAL%TYPE := &I_CANTIDAD;
STOCK_INSUFICIENTE EXCEPTION; 
V_STOCK B_ARTICULOS.STOCK_ACTUAL%TYPE;
V_PRECIO B_ARTICULOS.PRECIO%TYPE;
v_error_code NUMBER;
v_error_message VARCHAR2(255);
BEGIN
	BEGIN
		SELECT STOCK_ACTUAL, 
				PRECIO
		INTO	V_STOCK,
				V_PRECIO
		FROM B_ARTICULOS
		WHERE ID = V_ID_ARTICULO;
		
		IF V_CANTIDAD <= V_STOCK THEN 
			INSERT INTO B_DETALLE_VENTAS VALUES (
				V_ID_ARTICULO,
				V_ID_VENTA,
				(SELECT NVL(MAX(NUMERO_ITEM),0) + 1 FROM B_DETALLE_VENTAS),
				V_CANTIDAD,
				V_PRECIO
			);
			COMMIT;
		ELSE
			RAISE STOCK_INSUFICIENTE;
		END IF;
	EXCEPTION
		WHEN STOCK_INSUFICIENTE THEN
			DBMS_OUTPUT.PUT_LINE('Stock insuficiente.');
			ROLLBACK;
		WHEN NO_DATA_FOUND THEN
			DBMS_OUTPUT.PUT_LINE('No existe el articulo.');
	END;
EXCEPTION 
	WHEN OTHERS THEN
		v_error_code := SQLCODE;
		v_error_message := SQLERRM;
		DBMS_OUTPUT.PUT_LINE (TO_CHAR(v_error_code)||': '|| v_error_message);
		ROLLBACK;
END;
/