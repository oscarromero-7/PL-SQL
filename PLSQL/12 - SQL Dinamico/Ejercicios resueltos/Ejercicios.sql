 --Ejercicios del ejercitario
 --1

CREATE OR REPLACE PROCEDURE VERIFICAR_STATUS(POBJETO VARCHAR2)
IS 
  V_STATUS USER_OBJECTS.STATUS%TYPE;
  V_TIPO_OBJETO USER_OBJECTS.OBJECT_TYPE%TYPE;
  V_SENTENCIA VARCHAR2(500);
BEGIN
  SELECT OBJECT_TYPE, STATUS INTO V_TIPO_OBJETO, V_STATUS
  FROM USER_OBJECTS WHERE OBJECT_NAME  = UPPER(POBJETO);
  IF V_STATUS = 'INVALID' THEN
     V_SENTENCIA := 'ALTER '||V_TIPO_OBJETO ||' '||POBJETO || ' COMPILE';
	 EXECUTE IMMEDIATE V_SENTENCIA;
  END IF;
  EXCEPTION
     WHEN NO_DATA_FOUND THEN 
	      RAISE_APPLICATION_ERROR(-20001,'OBJETO INEXISTENTE!');
END;
/
7. Crear un procedimiento P_PROBAR_CURSOR:

CREATE OR REPLACE PROCEDURE P_PROBAR_CURSOR (P_TABLA VARCHAR2)
IS
 TYPE T_CUR IS REF CURSOR;
 V_CUR T_CUR;
 V_ID  NUMBER(10);
 V_NOMBRE VARCHAR2(100);
 FUNCTION F_MANEJAR_CURSOR(P_TABLA2 VARCHAR2) RETURN T_CUR
    IS  
	  V_SENTENCIA VARCHAR2(1000);
	  V_CUR2 T_CUR;
	BEGIN
	  V_SENTENCIA := 'SELECT ID, ';
	  IF UPPER(P_TABLA2) = 'B_PERSONAS' THEN
	     V_SENTENCIA := V_SENTENCIA || q'[RTRIM(NOMBRE)||', '||APELLIDO NOMBRE FROM ]';
	  ELSIF UPPER(P_TABLA2) = 'B_TIPO_CUENTA' THEN
	     V_SENTENCIA := V_SENTENCIA || ' NOMBRE_CATEGORIA NOMBRE FROM ';
	  ELSIF UPPER(P_TABLA2) = 'B_AREAS' THEN
	     V_SENTENCIA := V_SENTENCIA || ' NOMBRE_AREA NOMBRE FROM ';
	  ELSE
	      V_SENTENCIA := V_SENTENCIA || ' NOMBRE  FROM ';
	  END IF;
	 V_SENTENCIA := V_SENTENCIA || P_TABLA2;
	 DBMS_OUTPUT.PUT_LINE(V_SENTENCIA);
	 OPEN V_CUR2 FOR V_SENTENCIA;
	 RETURN V_CUR2;
 END;
 BEGIN
   IF UPPER(P_TABLA) NOT IN ('B_TIPO_CUENTA', 'B_AREAS', 'B_LOCALIDAD','B_PERSONAS', 'B_ARTICULOS')
          THEN
	  RAISE_APPLICATION_ERROR(-20002,'TABLA NO SOPORTADA');
   END IF;
   DBMS_OUTPUT.PUT_LINE('Datos de la tabla '||P_TABLA);
   V_CUR := F_MANEJAR_CURSOR(P_TABLA);
   DBMS_OUTPUT.PUT_LINE('ID           NOMBRE');
   LOOP
    FETCH V_CUR INTO V_ID, V_NOMBRE;
	EXIT WHEN V_CUR%NOTFOUND;
	DBMS_OUTPUT.PUT_LINE(TO_CHAR(V_ID,'99999999')||'-'||V_NOMBRE);
   END LOOP;
   CLOSE V_CUR;
END;
/
   
   
	