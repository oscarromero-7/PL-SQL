CREATE OR REPLACE PACKAGE PKG_EMPLEADO IS 
	TYPE R_EMPLEADO IS RECORD (
		NOM_APE VARCHAR2(50),
		ANTIGUEDAD_MES NUMBER(2),
		DIRECCION B_EMPLEADOS.NOMBRE%TYPE,
		CATEGORIA_ACTUAL B_CATEGORIAS_SALARIALES.NOMBRE_CAT%TYPE
	);
	TYPE R_HISTORICO_CATEGORIA IS RECORD (
		NOMBRE_CATEGORIA B_CATEGORIAS_SALARIALES.NOMBRE_CAT%TYPE,
		ASIGNACION B_CATEGORIAS_SALARIALES.ASIGNACION%TYPE,
		FECHA_INI DATE,
		FECHA_FIN DATE
	);
	TYPE TI_HISTORTICO_CATEGORIA IS TABLE OF R_HISTORICO_CATEGORIA INDEX BY BINARY_INTEGER;
	PROCEDURE PA_DETALLE_EMPLEADO (P_CEDULA NUMBER, R_EMPLEADO IN OUT R_EMPLEADO, COD_ESTADO IN OUT NUMBER, MESAJE IN OUT VARCHAR2);
	FUNCTION FN_HISTO_CATEGORIAS (P_CEDULA NUMBER) RETURN TI_HISTORTICO_CATEGORIA ;
	PROCEDURE PA_IMPRIMIR (PP_CEDULA NUMBER);
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_EMPLEADO IS 
	   PROCEDURE PA_DETALLE_EMPLEADO (
        P_CEDULA NUMBER, 
        V_EMP IN OUT R_EMPLEADO, 
        COD_ESTADO IN OUT NUMBER, 
        MENSAJE IN OUT VARCHAR2
    ) IS
        AUX NUMBER(5);
    BEGIN
        SELECT COUNT(*)
        INTO AUX
        FROM B_EMPLEADOS
        WHERE CEDULA = P_CEDULA;
        
        IF AUX = 0 THEN
            COD_ESTADO := -1;
            MENSAJE := 'REGISTRO NO EXISTE';
        ELSE
            COD_ESTADO := 0;
            MENSAJE := 'REGISTRO EXISTE';
            SELECT 
                E.NOMBRE || ' ' || E.APELLIDO,
                FLOOR((SYSDATE - E.FECHA_ING) / 30),
                E.DIRECCION,
                CS.NOMBRE_CAT
            INTO 
                V_EMP.NOM_APE,
                V_EMP.ANTIGUEDAD_MES,
                V_EMP.DIRECCION,
                V_EMP.CATEGORIA_ACTUAL
            FROM B_EMPLEADOS E
            INNER JOIN B_POSICION_ACTUAL PA ON E.CEDULA = PA.CEDULA
            INNER JOIN B_CATEGORIAS_SALARIALES CS ON PA.COD_CATEGORIA = CS.COD_CATEGORIA
            WHERE PA.FECHA_FIN IS NULL AND E.CEDULA = P_CEDULA;
        END IF;
    END PA_DETALLE_EMPLEADO;
	
	
	FUNCTION FN_HISTO_CATEGORIAS (P_CEDULA NUMBER) RETURN TI_HISTORTICO_CATEGORIA IS
		V_HISTO TI_HISTORTICO_CATEGORIA;
	BEGIN
		SELECT
			CS.NOMBRE_CAT,
			CS.ASIGNACION,
			PA.FECHA_INI,
			PA.FECHA_FIN
		BULK COLLECT INTO V_HISTO
		FROM B_POSICION_ACTUAL PA
		INNER JOIN B_CATEGORIAS_SALARIALES CS ON PA.COD_CATEGORIA = CS.COD_CATEGORIA
		WHERE PA.CEDULA = P_CEDULA;
		RETURN V_HISTO;
	END FN_HISTO_CATEGORIAS;
	PROCEDURE PA_IMPRIMIR (PP_CEDULA NUMBER) IS 
		V_EMPP R_EMPLEADO;
		V_COD_ESTADO NUMBER(2);
		V_MENSAJE VARCHAR2(200);
		V_HISTO TI_HISTORTICO_CATEGORIA;
	BEGIN
		PA_DETALLE_EMPLEADO(PP_CEDULA, V_EMPP, V_COD_ESTADO, V_MENSAJE);
		IF V_COD_ESTADO = 0 THEN
			DBMS_OUTPUT.PUT_LINE('NOMBRE APELLIDO: '||V_EMPP.NOM_APE||' ANTIGUEDAD: '||V_EMPP.ANTIGUEDAD_MES
			||' DIRECCION: '||V_EMPP.DIRECCION||' CATEGORIA_ACTUAL: '||V_EMPP.CATEGORIA_ACTUAL);
			V_HISTO := FN_HISTO_CATEGORIAS(PP_CEDULA);
			FOR I IN 1 .. V_HISTO.COUNT LOOP
				DBMS_OUTPUT.PUT_LINE('CATEGORIA: '||V_HISTO(I).NOMBRE_CATEGORIA||' ASIGNACION: '||V_HISTO(I).ASIGNACION||
				' FECHA_INICIO: '||V_HISTO(I).FECHA_INI||' FECHA_FIN: '||V_HISTO(I).FECHA_FIN);
			END LOOP;
		ELSE
			DBMS_OUTPUT.PUT_LINE(V_MENSAJE);
		END IF;
	END PA_IMPRIMIR;

END;
/

